openapi: 3.0.0
info:
  title: ENACOM Python bootcamp API
  version: 0.1.0
  description: >
    API (Interface de programação de aplicações) para resolução de problemas de
    otimização.

components:
  parameters:
    code:
      in: path
      name: code
      required: true
      schema:
        type: integer
        minimum: 1
  schemas:
    train_model:
      type: object
      required:
        - series
        - locomotives
        - wagons
      properties:
        series:
          type: string
        locomotives:
          type: integer
        wagons:
          type: integer
    train_model_usage:
      type: object
      required:
        - train_model
        - usage
      properties:
        train_model:
          $ref: '#/components/schemas/train_model'
        usage:
          type: integer
    wagons_by_fleet:
      type: object
      required:
        - fleet
        - fleet_name
        - total
      properties:
        fleet:
          type: string
        fleet_name:
          type: string
        total:
          type: integer
    locomotives_by_series:
      type: object
      required:
        - series
        - total
      properties:
        series:
          type: string
        total:
          type: integer
    railroad:
        type: object
        required:
          - train_models
          - wagons
          - locomotives
        properties:
          train_models:
            type: array
            items:
              $ref: '#/components/schemas/train_model'
          wagons:
            type: array
            items:
              $ref: '#/components/schemas/wagons_by_fleet'
          locomotives:
            type: array
            items:
              $ref: '#/components/schemas/locomotives_by_series'
    optimization_input:
      type: object
      required:
        - init_date
        - end_date
        - code
        - railroad
      properties:
        init_date:
          type: integer
        end_date:
          type: integer
        code:
          type: integer
        railroad:
          $ref: '#/components/schemas/railroad'
    optimization_output:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
        results:
          type: object
          required:
            - train_models_usage
            - wagons
            - locomotives
          properties:
            train_models_usage:
              type: array
              items:
                $ref: '#/components/schemas/train_model_usage'
            wagons:
              type: array
              items:
                $ref: '#/components/schemas/wagons_by_fleet'
            locomotives:
              type: array
              items:
                $ref: '#/components/schemas/locomotives_by_series'
    NotFoundError:
      type: object
      properties:
        message:
          type: string

paths:
  /solve:
    post:
      summary: Resolver problema de otimização
      description: Faz a chamada da função de resolução do problema de otimização.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/optimization_input'
            examples:
                input:
                  value: |-
                    {
                        "init_date": 1648771200,
                        "end_date": 1651276800,
                        "code": 255575,
                        "railroad": {
                            "train_models": [
                                {
                                    "series": "LC80",
                                    "locomotives": 3,
                                    "wagons": 43
                                },
                                {
                                    "series": "LC80",
                                    "locomotives": 4,
                                    "wagons": 56
                                }
                            ],
                            "wagons": [
                                {
                                    "fleet": "15800",
                                    "fleet_name": "Frota ENACOM",
                                    "total": 615
                                }
                            ],
                            "locomotives": [
                                {
                                    "series": "LC80",
                                    "total": 22
                                }
                            ]
                        }
                    }
      responses:
        200:
          description: Problema recebido.
          content:
            application/json:
              schema:
                type:
                  string
        404:
          description: Problema não pode ser recebido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /results/{code}:
    parameters:
      - $ref: '#/components/parameters/code'
    post:
      tags: ['com código da otimização']
      description: Pede os resultados da otimização a partir do código do problema.
      responses:
        200:
          description: Resultado retornado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/optimization_output'
        404:
          description: Resultado não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
